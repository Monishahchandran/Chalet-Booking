// Generated by Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
#ifndef MFSDK_SWIFT_H
#define MFSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MFSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC5MFSDK4Card")
@interface Card : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable number;
@property (nonatomic, readonly, copy) NSString * _Nullable expiryMonth;
@property (nonatomic, readonly, copy) NSString * _Nullable expiryYear;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable issuer;
@end

typedef SWIFT_ENUM(NSInteger, MFAPILanguage, open) {
  MFAPILanguageArabic = 0,
  MFAPILanguageEnglish = 1,
};


SWIFT_CLASS("_TtC5MFSDK10MFCardInfo")
@interface MFCardInfo : NSObject
@property (nonatomic) BOOL bypass;
- (nonnull instancetype)initWithCardNumber:(NSString * _Nonnull)cardNumber cardExpiryMonth:(NSString * _Nonnull)cardExpiryMonth cardExpiryYear:(NSString * _Nonnull)cardExpiryYear cardHolderName:(NSString * _Nonnull)cardHolderName cardSecurityCode:(NSString * _Nonnull)cardSecurityCode saveToken:(BOOL)saveToken OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCardNumber:(NSString * _Nonnull)cardNumber cardExpiryMonth:(NSString * _Nonnull)cardExpiryMonth cardExpiryYear:(NSString * _Nonnull)cardExpiryYear cardHolderName:(NSString * _Nonnull)cardHolderName cardSecurityCode:(NSString * _Nonnull)cardSecurityCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCardToken:(NSString * _Nonnull)cardToken OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5MFSDK18MFCardInfoResponse")
@interface MFCardInfoResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable recurringId;
@property (nonatomic, readonly, copy) NSString * _Nullable token;
@property (nonatomic, readonly, strong) Card * _Nullable cardInfo;
@end


SWIFT_CLASS("_TtC5MFSDK11MFConstants")
@interface MFConstants : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull paymentId;)
+ (NSString * _Nonnull)paymentId SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull applePayNotificationName;)
+ (NSString * _Nonnull)applePayNotificationName SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, MFCurrencyISO, open) {
  MFCurrencyISOKuwait_KWD = 0,
  MFCurrencyISOSaudiArabia_SAR = 1,
  MFCurrencyISOBahrain_BHD = 2,
  MFCurrencyISOUAE_AED = 3,
  MFCurrencyISOQatar_QAR = 4,
  MFCurrencyISOOman_MOR = 5,
  MFCurrencyISOJordan_JOD = 6,
  MFCurrencyISOUnitedStates_USD = 7,
  MFCurrencyISOEuro_EUR = 8,
  MFCurrencyISOCuban_Convertible_Peso_CUC = 9,
  MFCurrencyISOFalkland_Islands_Pound_FKP = 10,
  MFCurrencyISOIndonesian_Rupiah_IDR = 11,
  MFCurrencyISOBrazilian_Real_BRL = 12,
  MFCurrencyISOCosta_Rican_Colón_CRC = 13,
  MFCurrencyISOMaldivian_Rufiyaa_MVR = 14,
  MFCurrencyISOBrunei_Dollar_BND = 15,
  MFCurrencyISORomanian_Leu_RON = 16,
  MFCurrencyISOYemeni_Rial_YER = 17,
  MFCurrencyISOLesotho_Loti_LSL = 18,
  MFCurrencyISOMongolian_Tugrik_MNT = 19,
  MFCurrencyISOPapua_New_Guinean_Kina_PGK = 20,
  MFCurrencyISOLiberian_Dollar_LRD = 21,
  MFCurrencyISOVenezuelan_Bolívar_Soberano_VES = 22,
  MFCurrencyISOCape_Verdean_Escudo_CVE = 23,
  MFCurrencyISOPalladium_Ounce_XPD = 24,
  MFCurrencyISOHaitian_Gourde_HTG = 25,
  MFCurrencyISOSaint_Helena_Pound_SHP = 26,
  MFCurrencyISOKenyan_Shilling_KES = 27,
  MFCurrencyISOMoldovan_Leu_MDL = 28,
  MFCurrencyISOKyrgystani_Som_KGS = 29,
  MFCurrencyISONew_Zealand_Dollar_NZD = 30,
  MFCurrencyISOJersey_Pound_JEP = 31,
  MFCurrencyISOMacanese_Pataca_MOP = 32,
  MFCurrencyISOMoroccan_Dirham_MAD = 33,
  MFCurrencyISOEthiopian_Birr_ETB = 34,
  MFCurrencyISOTurkish_Lira_TRY = 35,
  MFCurrencyISOZambian_Kwacha_ZMW = 36,
  MFCurrencyISOEast_Caribbean_Dollar_XCD = 37,
  MFCurrencyISOLibyan_Dinar_LYD = 38,
  MFCurrencyISOSudanese_Pound_SDG = 39,
  MFCurrencyISOTanzanian_Shilling_TZS = 40,
  MFCurrencyISOVanuatu_Vatu_VUV = 41,
  MFCurrencyISOPlatinum_Ounce_XPT = 42,
  MFCurrencyISOFijian_Dollar_FJD = 43,
  MFCurrencyISOSaoTomAndPrincipeDobraSTD = 44,
  MFCurrencyISOPolish_Zloty_PLN = 45,
  MFCurrencyISOCanadian_Dollar_CAD = 46,
  MFCurrencyISOGuernsey_Pound_GGP = 47,
  MFCurrencyISOChilean_Unit_of_Account_UF_CLF = 48,
  MFCurrencyISOEritrean_Nakfa_ERN = 49,
  MFCurrencyISOSomali_Shilling_SOS = 50,
  MFCurrencyISOBotswanan_Pula_BWP = 51,
  MFCurrencyISOBelize_Dollar_BZD = 52,
  MFCurrencyISOSalvadoran_Colón_SVC = 53,
  MFCurrencyISOSão_Tomé_and_Príncipe_Dobra_STN = 54,
  MFCurrencyISOAzerbaijani_Manat_AZN = 55,
  MFCurrencyISOBarbadian_Dollar_BBD = 56,
  MFCurrencyISOMauritian_Rupee_MUR = 57,
  MFCurrencyISOSpecial_Drawing_Rights_XDR = 58,
  MFCurrencyISOLaotian_Kip_LAK = 59,
  MFCurrencyISOSwazi_Lilangeni_SZL = 60,
  MFCurrencyISOCzech_Republic_Koruna_CZK = 61,
  MFCurrencyISOMexican_Peso_MXN = 62,
  MFCurrencyISOCFP_Franc_XPF = 63,
  MFCurrencyISOJamaican_Dollar_JMD = 64,
  MFCurrencyISOBurundian_Franc_BIF = 65,
  MFCurrencyISOGibraltar_Pound_GIP = 66,
  MFCurrencyISONamibian_Dollar_NAD = 67,
  MFCurrencyISOSyrian_Pound_SYP = 68,
  MFCurrencyISOSurinamese_Dollar_SRD = 69,
  MFCurrencyISOCFA_Franc_BEAC_XAF = 70,
  MFCurrencyISONorth_Korean_Won_KPW = 71,
  MFCurrencyISONorwegian_Krone_NOK = 72,
  MFCurrencyISOSingapore_Dollar_SGD = 73,
  MFCurrencyISOBhutanese_Ngultrum_BTN = 74,
  MFCurrencyISOChinese_Yuan_CNY = 75,
  MFCurrencyISOMalaysian_Ringgit_MYR = 76,
  MFCurrencyISOAfghan_Afghani_AFN = 77,
  MFCurrencyISOBosniaHerzegovinaConvertibleMarkBAM = 78,
  MFCurrencyISODanish_Krone_DKK = 79,
  MFCurrencyISOSouth_Korean_Won_KRW = 80,
  MFCurrencyISOChilean_Peso_CLP = 81,
  MFCurrencyISOGuatemalan_Quetzal_GTQ = 82,
  MFCurrencyISOSerbian_Dinar_RSD = 83,
  MFCurrencyISOTurkmenistani_Manat_TMT = 84,
  MFCurrencyISOArmenian_Dram_AMD = 85,
  MFCurrencyISOMauritanianOuguiyaMRO = 86,
  MFCurrencyISOSolomon_Islands_Dollar_SBD = 87,
  MFCurrencyISOBelarusian_Ruble_BYN = 88,
  MFCurrencyISOBangladeshi_Taka_BDT = 89,
  MFCurrencyISOMalawian_Kwacha_MWK = 90,
  MFCurrencyISOPakistani_Rupee_PKR = 91,
  MFCurrencyISOSouth_African_Rand_ZAR = 92,
  MFCurrencyISOZimbabwean_Dollar_ZWL = 93,
  MFCurrencyISOBolivian_Boliviano_BOB = 94,
  MFCurrencyISOGold_Ounce_XAU = 95,
  MFCurrencyISOTrinidad_and_Tobago_Dollar_TTD = 96,
  MFCurrencyISOPeruvian_Nuevo_Sol_PEN = 97,
  MFCurrencyISOAustralian_Dollar_AUD = 98,
  MFCurrencyISOSri_Lankan_Rupee_LKR = 99,
  MFCurrencyISOSierra_Leonean_Leone_SLL = 100,
  MFCurrencyISOIsraeli_New_Sheqel_ILS = 101,
  MFCurrencyISOBitcoin_BTC = 102,
  MFCurrencyISOLebanese_Pound_LBP = 103,
  MFCurrencyISORwandan_Franc_RWF = 104,
  MFCurrencyISOCroatian_Kuna_HRK = 105,
  MFCurrencyISOHonduran_Lempira_HNL = 106,
  MFCurrencyISOBermudan_Dollar_BMD = 107,
  MFCurrencyISOVenezuelan_Bolívar_Fuerte_Old_VEF = 108,
  MFCurrencyISOCongolese_Franc_CDF = 109,
  MFCurrencyISOGuinean_Franc_GNF = 110,
  MFCurrencyISOIndian_Rupee_INR = 111,
  MFCurrencyISOBritish_Pound_Sterling_GBP = 112,
  MFCurrencyISOSamoan_Tala_WST = 113,
  MFCurrencyISONetherlands_Antillean_Guilder_ANG = 114,
  MFCurrencyISOManx_pound_IMP = 115,
  MFCurrencyISONicaraguan_Córdoba_NIO = 116,
  MFCurrencyISOAlgerian_Dinar_DZD = 117,
  MFCurrencyISOSouth_Sudanese_Pound_SSP = 118,
  MFCurrencyISOSwiss_Franc_CHF = 119,
  MFCurrencyISOBulgarian_Lev_BGN = 120,
  MFCurrencyISOEgyptian_Pound_EGP = 121,
  MFCurrencyISOCayman_Islands_Dollar_KYD = 122,
  MFCurrencyISOMauritanian_Ouguiya_MRU = 123,
  MFCurrencyISOJapanese_Yen_JPY = 124,
  MFCurrencyISOPhilippine_Peso_PHP = 125,
  MFCurrencyISOParaguayan_Guarani_PYG = 126,
  MFCurrencyISOSwedish_Krona_SEK = 127,
  MFCurrencyISOCuban_Peso_CUP = 128,
  MFCurrencyISOHong_Kong_Dollar_HKD = 129,
  MFCurrencyISOIraqi_Dinar_IQD = 130,
  MFCurrencyISODominican_Peso_DOP = 131,
  MFCurrencyISOKazakhstani_Tenge_KZT = 132,
  MFCurrencyISOHungarian_Forint_HUF = 133,
  MFCurrencyISONigerian_Naira_NGN = 134,
  MFCurrencyISONew_Taiwan_Dollar_TWD = 135,
  MFCurrencyISONepalese_Rupee_NPR = 136,
  MFCurrencyISOUgandan_Shilling_UGX = 137,
  MFCurrencyISOSilver_Ounce_XAG = 138,
  MFCurrencyISOAngolan_Kwanza_AOA = 139,
  MFCurrencyISOComorian_Franc_KMF = 140,
  MFCurrencyISOMyanma_Kyat_MMK = 141,
  MFCurrencyISOCFA_Franc_BCEAO_XOF = 142,
  MFCurrencyISOGeorgian_Lari_GEL = 143,
  MFCurrencyISOGambian_Dalasi_GMD = 144,
  MFCurrencyISOSeychellois_Rupee_SCR = 145,
  MFCurrencyISOTunisian_Dinar_TND = 146,
  MFCurrencyISOCambodian_Riel_KHR = 147,
  MFCurrencyISOChinese_Yuan_Offshore_CNH = 148,
  MFCurrencyISOArgentine_Peso_ARS = 149,
  MFCurrencyISOTajikistani_Somoni_TJS = 150,
  MFCurrencyISORussian_Ruble_RUB = 151,
  MFCurrencyISOGhanaian_Cedi_GHS = 152,
  MFCurrencyISOGuyanaese_Dollar_GYD = 153,
  MFCurrencyISODjiboutian_Franc_DJF = 154,
  MFCurrencyISOMozambican_Metical_MZN = 155,
  MFCurrencyISOUkrainian_Hryvnia_UAH = 156,
  MFCurrencyISOBahamian_Dollar_BSD = 157,
  MFCurrencyISOAruban_Florin_AWG = 158,
  MFCurrencyISOVietnamese_Dong_VND = 159,
  MFCurrencyISOIcelandic_Króna_ISK = 160,
  MFCurrencyISOUzbekistan_Som_UZS = 161,
  MFCurrencyISOThai_Baht_THB = 162,
  MFCurrencyISOUruguayan_Peso_UYU = 163,
  MFCurrencyISOMacedonian_Denar_MKD = 164,
  MFCurrencyISOMalagasy_Ariary_MGA = 165,
  MFCurrencyISOColombian_Peso_COP = 166,
  MFCurrencyISOPanamanian_Balboa_PAB = 167,
  MFCurrencyISOIranian_Rial_IRR = 168,
  MFCurrencyISOTonganPangaTOP = 169,
  MFCurrencyISOAlbanian_Lek_ALL = 170,
};


SWIFT_CLASS("_TtC5MFSDK17MFCustomerAddress")
@interface MFCustomerAddress : NSObject
@property (nonatomic, copy) NSString * _Nonnull block;
@property (nonatomic, copy) NSString * _Nonnull street;
@property (nonatomic, copy) NSString * _Nonnull houseBuildingNo;
@property (nonatomic, copy) NSString * _Nonnull address;
@property (nonatomic, copy) NSString * _Nonnull addressInstructions;
- (nonnull instancetype)initWithBlock:(NSString * _Nonnull)block street:(NSString * _Nonnull)street houseBuildingNo:(NSString * _Nonnull)houseBuildingNo address:(NSString * _Nonnull)address addressInstructions:(NSString * _Nonnull)addressInstructions OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class MFPaymentStatusResponse;

SWIFT_CLASS("_TtC5MFSDK23MFDirectPaymentResponse")
@interface MFDirectPaymentResponse : NSObject
@property (nonatomic, readonly, strong) MFPaymentStatusResponse * _Nullable getPaymentStatusResponse;
@property (nonatomic, readonly, strong) MFCardInfoResponse * _Nullable cardInfoResponse;
- (nonnull instancetype)initWithGetPaymentStatusResponse:(MFPaymentStatusResponse * _Nonnull)getPaymentStatusResponse cardInfoResponse:(MFCardInfoResponse * _Nonnull)cardInfoResponse OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum MFMobileCountryCodeISO : NSInteger;
enum MFPaymentMethodCode : NSInteger;

SWIFT_CLASS("_TtC5MFSDK14MFEnumRawValue")
@interface MFEnumRawValue : NSObject
+ (NSString * _Nonnull)rawValueWithMobileISO:(enum MFMobileCountryCodeISO)mobileISO SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)rawValueWithPaymentMethodCode:(enum MFPaymentMethodCode)paymentMethodCode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class MFProduct;
enum MFLanguage : NSInteger;
@class MFSupplier;

SWIFT_CLASS("_TtC5MFSDK23MFExecutePaymentRequest")
@interface MFExecutePaymentRequest : NSObject
@property (nonatomic, copy) NSString * _Nonnull customerName;
@property (nonatomic, copy) NSString * _Nonnull customerCivilId;
@property (nonatomic, copy) NSString * _Nonnull customerReference;
@property (nonatomic, copy) NSString * _Nonnull customerEmail;
@property (nonatomic, copy) NSString * _Nonnull customerMobile;
@property (nonatomic, copy) NSArray<MFProduct *> * _Nonnull invoiceItems;
@property (nonatomic) enum MFLanguage language;
@property (nonatomic, copy) NSDate * _Nullable expiryDate;
@property (nonatomic, strong) MFCustomerAddress * _Nullable customerAddress;
@property (nonatomic, copy) NSString * _Nonnull userDefinedField;
@property (nonatomic) enum MFCurrencyISO displayCurrencyIso;
@property (nonatomic, copy) NSString * _Nonnull mobileCountryCode;
@property (nonatomic) NSInteger supplierCode SWIFT_DEPRECATED_MSG("Please use 'suppliers' array property instead", "suppliers");
@property (nonatomic) NSDecimal supplierValue SWIFT_DEPRECATED_MSG("Please use 'suppliers' array property instead", "suppliers");
@property (nonatomic, copy) NSArray<MFSupplier *> * _Nonnull suppliers;
- (nonnull instancetype)initWithInvoiceValue:(NSDecimal)invoiceValue paymentMethod:(NSInteger)paymentMethod callBackUrl:(NSString * _Nonnull)callBackUrl errorUrl:(NSString * _Nonnull)errorUrl OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithInvoiceValue:(NSDecimal)invoiceValue paymentMethod:(NSInteger)paymentMethod OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5MFSDK14MFFailResponse")
@interface MFFailResponse : NSObject
@property (nonatomic, readonly) NSInteger statusCode;
@property (nonatomic, readonly, copy) NSString * _Nonnull errorDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5MFSDK24MFInitiatePaymentRequest")
@interface MFInitiatePaymentRequest : NSObject
- (nonnull instancetype)initWithInvoiceAmount:(NSDecimal)invoiceAmount currencyIso:(enum MFCurrencyISO)currencyIso OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class MFPaymentMethod;

SWIFT_CLASS("_TtC5MFSDK25MFInitiatePaymentResponse")
@interface MFInitiatePaymentResponse : NSObject
@property (nonatomic, copy) NSArray<MFPaymentMethod *> * _Nullable paymentMethods;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5MFSDK13MFInvoiceItem")
@interface MFInvoiceItem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull itemName;
@property (nonatomic, readonly) NSInteger quantity;
@property (nonatomic, readonly) NSDecimal unitPrice;
@end


SWIFT_CLASS("_TtC5MFSDK20MFInvoiceTransaction")
@interface MFInvoiceTransaction : NSObject
@end

typedef SWIFT_ENUM(NSInteger, MFKeyType, open) {
  MFKeyTypeInvoiceId = 0,
  MFKeyTypePaymentId = 1,
};

typedef SWIFT_ENUM(NSInteger, MFLanguage, open) {
  MFLanguageArabic = 0,
  MFLanguageEnglish = 1,
};

typedef SWIFT_ENUM(NSInteger, MFMobileCountryCodeISO, open) {
  MFMobileCountryCodeISOKuwait = 0,
  MFMobileCountryCodeISOSaudiArabia = 1,
  MFMobileCountryCodeISOBahrain = 2,
  MFMobileCountryCodeISOUAE = 3,
  MFMobileCountryCodeISOQatar = 4,
  MFMobileCountryCodeISOOman = 5,
  MFMobileCountryCodeISOJordan = 6,
};

typedef SWIFT_ENUM(NSInteger, MFNotificationOption, open) {
  MFNotificationOptionAll = 0,
  MFNotificationOptionEmail = 1,
  MFNotificationOptionSms = 2,
  MFNotificationOptionLink = 3,
};


SWIFT_CLASS("_TtC5MFSDK15MFPaymentMethod")
@interface MFPaymentMethod : NSObject
@property (nonatomic) NSInteger paymentMethodId;
@property (nonatomic, copy) NSString * _Nullable paymentMethodAr;
@property (nonatomic, copy) NSString * _Nullable paymentMethodEn;
@property (nonatomic) BOOL isDirectPayment;
@property (nonatomic) NSDecimal serviceCharge;
@property (nonatomic) NSDecimal totalAmount;
@property (nonatomic, copy) NSString * _Nullable currencyIso;
@property (nonatomic, copy) NSString * _Nullable imageUrl;
@property (nonatomic, copy) NSString * _Nonnull paymentMethodCode;
@end

typedef SWIFT_ENUM(NSInteger, MFPaymentMethodCode, open) {
  MFPaymentMethodCodeAmex = 0,
  MFPaymentMethodCodeSadad = 1,
  MFPaymentMethodCodeBenefit = 2,
  MFPaymentMethodCodeUaeDebitCards = 3,
  MFPaymentMethodCodeQatarDebitCards = 4,
  MFPaymentMethodCodeMada = 5,
  MFPaymentMethodCodeKfast = 6,
  MFPaymentMethodCodeKnet = 7,
  MFPaymentMethodCodeApplePay = 8,
  MFPaymentMethodCodeAfs = 9,
  MFPaymentMethodCodeVisaMASTER = 10,
  MFPaymentMethodCodeStcPay = 11,
};


SWIFT_CLASS("_TtC5MFSDK16MFPaymentRequest")
@interface MFPaymentRequest : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MFPaymentRequest * _Nonnull shared;)
+ (MFPaymentRequest * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface MFPaymentRequest (SWIFT_EXTENSION(MFSDK))
- (void)cancelTokenWithToken:(NSString * _Nonnull)token apiLanguage:(enum MFAPILanguage)apiLanguage completion:(void (^ _Nonnull)(BOOL, MFFailResponse * _Nullable))completion;
@end


@interface MFPaymentRequest (SWIFT_EXTENSION(MFSDK))
- (void)cancelRecurringPaymentWithRecurringId:(NSString * _Nonnull)recurringId apiLanguage:(enum MFAPILanguage)apiLanguage completion:(void (^ _Nonnull)(BOOL, MFFailResponse * _Nullable))completion;
@end


@interface MFPaymentRequest (SWIFT_EXTENSION(MFSDK))
- (void)executeApplePayPaymentWithRequest:(MFExecutePaymentRequest * _Nonnull)request apiLanguage:(enum MFAPILanguage)apiLanguage completion:(void (^ _Nonnull)(MFPaymentStatusResponse * _Nullable, MFFailResponse * _Nullable, NSString * _Nullable))completion SWIFT_AVAILABILITY(ios,introduced=13);
@end


@interface MFPaymentRequest (SWIFT_EXTENSION(MFSDK))
- (void)initiatePaymentWithRequest:(MFInitiatePaymentRequest * _Nonnull)request apiLanguage:(enum MFAPILanguage)apiLanguage completion:(void (^ _Nonnull)(MFInitiatePaymentResponse * _Nullable, MFFailResponse * _Nullable))completion;
@end

@class MFPaymentStatusRequest;

@interface MFPaymentRequest (SWIFT_EXTENSION(MFSDK))
- (void)getPaymentStatusWithPaymentStatus:(MFPaymentStatusRequest * _Nonnull)paymentStatus apiLanguage:(enum MFAPILanguage)apiLanguage completion:(void (^ _Nonnull)(MFPaymentStatusResponse * _Nullable, MFFailResponse * _Nullable))completion;
@end

@class MFSendPaymentRequest;
@class MFSendPaymentResponse;

@interface MFPaymentRequest (SWIFT_EXTENSION(MFSDK))
- (void)sendPaymentWithRequest:(MFSendPaymentRequest * _Nonnull)request apiLanguage:(enum MFAPILanguage)apiLanguage completion:(void (^ _Nonnull)(MFSendPaymentResponse * _Nullable, MFFailResponse * _Nullable))completion;
@end


@interface MFPaymentRequest (SWIFT_EXTENSION(MFSDK))
- (void)executePaymentWithRequest:(MFExecutePaymentRequest * _Nonnull)request apiLanguage:(enum MFAPILanguage)apiLanguage completion:(void (^ _Nonnull)(MFPaymentStatusResponse * _Nullable, MFFailResponse * _Nullable, NSString * _Nullable))completion;
@end


@interface MFPaymentRequest (SWIFT_EXTENSION(MFSDK))
- (void)executeApplePayPaymentWithRequest:(MFExecutePaymentRequest * _Nonnull)request urlScheme:(NSString * _Nonnull)urlScheme apiLanguage:(enum MFAPILanguage)apiLanguage completion:(void (^ _Nonnull)(MFPaymentStatusResponse * _Nullable, MFFailResponse * _Nullable, NSString * _Nullable))completion SWIFT_AVAILABILITY(ios,obsoleted=13.0,message="Please use 'executeApplePayPaymentWithRequest:apiLanguage:completion:' instead") SWIFT_AVAILABILITY(ios,introduced=9.0);
@end

enum MFRecurringTypeEnum : NSInteger;

@interface MFPaymentRequest (SWIFT_EXTENSION(MFSDK))
- (void)executeRecurringPaymentWithRequest:(MFExecutePaymentRequest * _Nonnull)request cardInfo:(MFCardInfo * _Nonnull)cardInfo recurringIntervalDays:(NSInteger)recurringIntervalDays apiLanguage:(enum MFAPILanguage)apiLanguage completion:(void (^ _Nonnull)(MFDirectPaymentResponse * _Nullable, MFFailResponse * _Nullable, NSString * _Nullable))completion SWIFT_DEPRECATED_MSG("Please use 'executeRecurringPayment(request:cardInfo:recurringType:recurringIntervalDays:iteration:apiLanguage:completion:)' instead");
- (void)executeRecurringPaymentWithRequest:(MFExecutePaymentRequest * _Nonnull)request cardInfo:(MFCardInfo * _Nonnull)cardInfo recurringType:(enum MFRecurringTypeEnum)recurringType recurringIntervalDays:(NSInteger)recurringIntervalDays iteration:(NSInteger)iteration apiLanguage:(enum MFAPILanguage)apiLanguage completion:(void (^ _Nonnull)(MFDirectPaymentResponse * _Nullable, MFFailResponse * _Nullable, NSString * _Nullable))completion;
@end


@interface MFPaymentRequest (SWIFT_EXTENSION(MFSDK))
- (void)executeDirectPaymentWithRequest:(MFExecutePaymentRequest * _Nonnull)request cardInfo:(MFCardInfo * _Nonnull)cardInfo apiLanguage:(enum MFAPILanguage)apiLanguage completion:(void (^ _Nonnull)(MFDirectPaymentResponse * _Nullable, MFFailResponse * _Nullable, NSString * _Nullable))completion;
@end


SWIFT_CLASS("_TtC5MFSDK22MFPaymentStatusRequest")
@interface MFPaymentStatusRequest : NSObject
- (nonnull instancetype)initWithInvoiceID:(NSString * _Nonnull)invoiceID OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithPaymentId:(NSString * _Nonnull)paymentId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5MFSDK23MFPaymentStatusResponse")
@interface MFPaymentStatusResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable invoiceStatus;
@property (nonatomic, readonly, copy) NSString * _Nullable invoiceReference;
@property (nonatomic, readonly, copy) NSString * _Nullable customerReference;
@property (nonatomic, readonly, copy) NSString * _Nullable createdDate;
@property (nonatomic, readonly, copy) NSString * _Nullable expiryDate;
@property (nonatomic, readonly, copy) NSString * _Nullable comments;
@property (nonatomic, readonly, copy) NSString * _Nullable customerName;
@property (nonatomic, readonly, copy) NSString * _Nullable customerMobile;
@property (nonatomic, readonly, copy) NSString * _Nullable customerEmail;
@property (nonatomic, readonly, copy) NSString * _Nullable userDefinedField;
@property (nonatomic, readonly, copy) NSString * _Nullable invoiceDisplayValue;
@property (nonatomic, readonly, copy) NSArray<MFInvoiceItem *> * _Nullable invoiceItems;
@property (nonatomic, readonly, copy) NSArray<MFInvoiceTransaction *> * _Nullable invoiceTransactions;
@property (nonatomic, readonly, copy) NSArray<MFSupplier *> * _Nullable suppliers;
@end

typedef SWIFT_ENUM(NSInteger, MFPaymentype, open) {
  MFPaymentypeCard = 0,
  MFPaymentypeToken = 1,
};


SWIFT_CLASS("_TtC5MFSDK9MFProduct")
@interface MFProduct : NSObject
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic) double unitPrice;
@property (nonatomic) NSInteger quantity;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name unitPrice:(double)unitPrice quantity:(NSInteger)quantity OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, MFRecurringTypeEnum, open) {
  MFRecurringTypeEnumDaily = 0,
  MFRecurringTypeEnumWeekly = 1,
  MFRecurringTypeEnumMonthly = 2,
  MFRecurringTypeEnumCustom = 3,
};


SWIFT_CLASS("_TtC5MFSDK20MFSendPaymentRequest")
@interface MFSendPaymentRequest : NSObject
@property (nonatomic, copy) NSString * _Nonnull mobileCountryIsoCode;
@property (nonatomic) enum MFCurrencyISO displayCurrencyIso;
@property (nonatomic, copy) NSString * _Nonnull customerCivilId;
@property (nonatomic, copy) NSString * _Nonnull customerReference;
@property (nonatomic, copy) NSString * _Nonnull customerEmail;
@property (nonatomic, copy) NSString * _Nonnull customerMobile;
@property (nonatomic, copy) NSArray<MFProduct *> * _Nonnull invoiceItems;
@property (nonatomic) enum MFLanguage language;
@property (nonatomic, copy) NSDate * _Nullable expiryDate;
@property (nonatomic, copy) NSString * _Nonnull errorUrl;
@property (nonatomic, strong) MFCustomerAddress * _Nullable customerAddress;
@property (nonatomic, copy) NSString * _Nonnull callBackUrl;
@property (nonatomic, copy) NSString * _Nonnull userDefinedField;
@property (nonatomic) NSInteger supplierCode;
@property (nonatomic) NSDecimal supplierValue;
- (nonnull instancetype)initWithInvoiceValue:(NSDecimal)invoiceValue notificationOption:(enum MFNotificationOption)notificationOption customerName:(NSString * _Nonnull)customerName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5MFSDK21MFSendPaymentResponse")
@interface MFSendPaymentResponse : NSObject
@property (nonatomic, copy) NSString * _Nullable invoiceURL;
@property (nonatomic, copy) NSString * _Nullable customerReference;
@property (nonatomic, copy) NSString * _Nullable userDefinedField;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class MFTheme;

SWIFT_CLASS("_TtC5MFSDK10MFSettings")
@interface MFSettings : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MFSettings * _Nonnull shared;)
+ (MFSettings * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)configureWithToken:(NSString * _Nonnull)token baseURL:(NSString * _Nonnull)baseURL;
- (void)setThemeWithTheme:(MFTheme * _Nonnull)theme;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5MFSDK10MFSupplier")
@interface MFSupplier : NSObject
@property (nonatomic) NSInteger supplierCode;
@property (nonatomic) NSDecimal proposedShare;
@property (nonatomic) NSDecimal invoiceShare;
@property (nonatomic, copy) NSString * _Nonnull supplierName;
@property (nonatomic) NSDecimal depositShare;
- (nonnull instancetype)initWithSupplierCode:(NSInteger)supplierCode proposedShare:(NSDecimal)proposedShare invoiceShare:(NSDecimal)invoiceShare OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIColor;

SWIFT_CLASS("_TtC5MFSDK7MFTheme")
@interface MFTheme : NSObject
@property (nonatomic, strong) UIColor * _Nonnull navigationTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTintColor;
@property (nonatomic, copy) NSString * _Nonnull navigationTitle;
@property (nonatomic, copy) NSString * _Nonnull cancelButtonTitle;
- (nonnull instancetype)initWithNavigationTintColor:(UIColor * _Nonnull)navigationTintColor navigationBarTintColor:(UIColor * _Nonnull)navigationBarTintColor navigationTitle:(NSString * _Nonnull)navigationTitle cancelButtonTitle:(NSString * _Nonnull)cancelButtonTitle OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface NSURL (SWIFT_EXTENSION(MFSDK))
- (NSString * _Nullable)objectForKeyedSubscript:(NSString * _Nonnull)queryParam SWIFT_WARN_UNUSED_RESULT;
@end


@interface UINavigationController (SWIFT_EXTENSION(MFSDK))
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
